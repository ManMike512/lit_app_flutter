name: "Build & Release" # You can name it as you want

on:
  push:
    branches:
      - main # Change to the branch you want to trigger the build
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Java
        uses: actions/cache@v3
        with:
          path: $JAVA_HOME
          key: ${{ runner.os }}-java-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-java-

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "oracle"
          java-version: "17"
          cache: "gradle"

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.4"
          channel: "stable"
          cache: true

      - name: Cache Flutter packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
            ${{ runner.os }}-pub-

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Verify Key Files
        run: |
          # Check if keystore.jks exists
          if [ ! -f "android/app/keystore.jks" ]; then
            echo "Error: keystore.jks not found in android/app/"
            exit 1
          fi

          # Check if key.properties exists
          if [ ! -f "android/key.properties" ]; then
            echo "Error: key.properties not found in android/"
            exit 1
          fi

          # Verify key.properties content
          if ! grep -q "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" android/key.properties; then
            echo "Error: storePassword is not set correctly in key.properties"
            exit 1
          fi
          if ! grep -q "keyPassword=${{ secrets.KEY_PASSWORD }}" android/key.properties; then
            echo "Error: keyPassword is not set correctly in key.properties"
            exit 1
          fi
          if ! grep -q "keyAlias=${{ secrets.KEY_ALIAS }}" android/key.properties; then
            echo "Error: keyAlias is not set correctly in key.properties"
            exit 1
          fi
          if ! grep -q "storeFile=keystore.jks" android/key.properties; then
            echo "Error: storeFile is not set correctly in key.properties"
            exit 1
          fi

      - name: Build APK
        env:
          storePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}
        run: flutter build apk --release --split-per-abi

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Rename APKs
        run: |
          for file in build/app/outputs/flutter-apk/app-*; do
            mv "$file" "${file/app-/lit-app-${{ env.VERSION }}-}"
          done

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/*

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}
